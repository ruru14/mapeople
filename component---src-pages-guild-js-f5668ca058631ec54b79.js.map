{"version":3,"file":"component---src-pages-guild-js-f5668ca058631ec54b79.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/engine-is-browser.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/engine-is-deno.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/engine-is-node.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/function-bind-context.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/function-uncurry-this-clause.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/get-iterator-method.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/get-iterator.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/iterate.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/iterator-close.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/iterators.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/perform.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/promise-constructor-detection.js","webpack://gatsby-starter-default/./node_modules/core-js/internals/promise-statics-incorrect-iteration.js","webpack://gatsby-starter-default/./node_modules/core-js/modules/es.promise.all-settled.js","webpack://gatsby-starter-default/./node_modules/core-js/modules/esnext.promise.all-settled.js","webpack://gatsby-starter-default/./src/components/character_slot_guild_result.js","webpack://gatsby-starter-default/./src/components/character_slot_guild_result.module.css","webpack://gatsby-starter-default/./src/components/search_guild.js","webpack://gatsby-starter-default/./src/components/search_guild.module.css","webpack://gatsby-starter-default/./src/pages/guild.js"],"sourcesContent":["'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","'use strict';\nvar IS_DENO = require('../internals/engine-is-deno');\nvar IS_NODE = require('../internals/engine-is-node');\n\nmodule.exports = !IS_DENO && !IS_NODE\n  && typeof window == 'object'\n  && typeof document == 'object';\n","'use strict';\n/* global Deno -- Deno case */\nmodule.exports = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';\n","'use strict';\nvar global = require('../internals/global');\nvar classof = require('../internals/classof-raw');\n\nmodule.exports = classof(global.process) === 'process';\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar classof = require('../internals/classof');\nvar getMethod = require('../internals/get-method');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","'use strict';\nvar global = require('../internals/global');\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar isCallable = require('../internals/is-callable');\nvar isForced = require('../internals/is-forced');\nvar inspectSource = require('../internals/inspect-source');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_DENO = require('../internals/engine-is-deno');\nvar IS_PURE = require('../internals/is-pure');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\nvar SPECIES = wellKnownSymbol('species');\nvar SUBCLASSING = false;\nvar NATIVE_PROMISE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);\n\nvar FORCED_PROMISE_CONSTRUCTOR = isForced('Promise', function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution\n  if (IS_PURE && !(NativePromisePrototype['catch'] && NativePromisePrototype['finally'])) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {\n    // Detect correctness of subclassing with @@species support\n    var promise = new NativePromiseConstructor(function (resolve) { resolve(1); });\n    var FakePromise = function (exec) {\n      exec(function () { /* empty */ }, function () { /* empty */ });\n    };\n    var constructor = promise.constructor = {};\n    constructor[SPECIES] = FakePromise;\n    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n    if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  } return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT;\n});\n\nmodule.exports = {\n  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,\n  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,\n  SUBCLASSING: SUBCLASSING\n};\n","'use strict';\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;\n\nmodule.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {\n  NativePromiseConstructor.all(iterable).then(undefined, function () { /* empty */ });\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar iterate = require('../internals/iterate');\nvar PROMISE_STATICS_INCORRECT_ITERATION = require('../internals/promise-statics-incorrect-iteration');\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var promiseResolve = aCallable(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.promise.all-settled.js');\n","import * as React from \"react\"\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport CharacterSlotBasic from \"./character_slot_basic\"\r\nimport * as styles from \"../components/character_slot_guild_result.module.css\"\r\n\r\nconst CharacterSlotGuildResult = ({ characterInfoGuild, characterInfoOrigin }) => {\r\n\r\n    return(\r\n        <Table borderless>\r\n            <tbody>\r\n                <tr>\r\n                <td rowSpan={0}><CharacterSlotBasic characterInfo={characterInfoGuild}/></td>\r\n                <td>\r\n                </td>\r\n                <td rowSpan={0}><CharacterSlotBasic characterInfo={characterInfoOrigin}/></td>\r\n                </tr>\r\n                <tr>\r\n                    {characterInfoOrigin?.character_guild_name&&\r\n                        characterInfoGuild.character_guild_name === characterInfoOrigin.character_guild_name ? \r\n                            <td><h1 className={styles.text_match}>{`=>`}</h1></td> :\r\n                            <td><h1 className={styles.text_unmatch}>{`=>`}</h1></td>\r\n                        \r\n                    }\r\n                    \r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CharacterSlotGuildResult\r\n","// extracted by mini-css-extract-plugin\nexport var text_match = \"character_slot_guild_result-module--text_match--f6aec\";\nexport var text_unmatch = \"character_slot_guild_result-module--text_unmatch--56301\";","import * as React from \"react\"\r\nimport axios from 'axios'\r\n\r\nimport SearchWindow from \"./search_window\"\r\nimport CharacterSlotGuildResult from \"./character_slot_guild_result\"\r\nimport * as styles from \"../components/search_guild.module.css\"\r\nimport dayjs from \"dayjs\"\r\n\r\nconst SearchGuild = () => {\r\n    const [inputText, setInputText] = React.useState('')\r\n    const [searchGuild, setSearchGuild] = React.useState('')\r\n    const [visible, setVisible] = React.useState(false)\r\n    const worldList = [`스카니아`, `베라`, `루나`, `제니스`, `크로아`, `유니온`, `엘리시움`, `이노시스`, `레드`, `오로라`, `아케인`, `노바`, `리부트`, `리부트2`, `버닝`, `버닝2`, `버닝3`]\r\n    const [selectWorld, setSelectWorld] = React.useState(worldList[0])\r\n    const [oguildId, setOguildId] = React.useState(null)\r\n    const [guildMemberName, setGuildMemberName] = React.useState([])\r\n    const [guildMemberOcid, setGuildMemberOcid] = React.useState([])\r\n    const [guildMemberBasicInfo, setGuildMemberBasicInfo] = React.useState([])\r\n    const [guildMemberOriginInfo, setGuildMemberOriginInfo] = React.useState([])\r\n\r\n    const [testGuildMember, setTestGuildMember] = React.useState([])\r\n    const [testObj, setTestObj] = React.useState([])\r\n\r\n    /*\r\n    1. getOguildId : 길드 guid 조회 -> guid [1] \r\n    2. getGuildBasicInfo : 길드 정보 조회 (guid필요) -> 길드원 이름 배열 [1]\r\n    3. getGuildMemberOcid : 길드원 ocid조회 (길드원 이름 배열 필요) -> 길드원 ocid 배열 [n]\r\n    4. 길드원 정보 조회 (길드원 ocid 필요) -> 길드원 기본 정보 [n] \r\n    5. 길드원 유니온 조회 (길드원 ocid 필요) -> 길드원 유니온 정보 [n]\r\n    6. 길드원 본캐 ocid 조회 (길드원 유니온 정보 필요) -> 길드원 본캐 ocid [n]\r\n    7. 길드원 본캐 정보 조회 (길드원 본캐 ocid 필요 -> 길드원 본캐 정보 [n]\r\n    */\r\n\r\n    const getOguildId = (guildName) => {\r\n        axios.get(`${process.env.GATSBY_NEXON_API_BASE_URL}`+`guild/id?guild_name=`+guildName+`&world_name=`+selectWorld, \r\n            {headers: {\r\n                \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        }}).then(response=>{\r\n            //console.log(\"getOguildId::Success : \"+response.data.oguild_id)\r\n            setOguildId(response.data.oguild_id)\r\n            getGuildBasicInfo(response.data.oguild_id)\r\n        }).catch(error=>{\r\n            //console.log('Error!')\r\n        })\r\n    }\r\n\r\n    const getGuildBasicInfo = (oguildId) => {\r\n        let date = dayjs()\r\n        const formatDate = date.subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n        axios.get(`${process.env.GATSBY_NEXON_API_BASE_URL}`+`guild/basic?oguild_id=`+oguildId+`&date=`+formatDate, \r\n            {headers: {\r\n                \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        }}).then(response=>{\r\n            //console.log(\"getGuildBasicInfo::Success\")\r\n            //setTestGuildMember(testGuildMember => [...testGuildMember,response.data.guild_member])\r\n            //testGetOcid(response.data.guild_member)\r\n            //setGuildMemberName(response.data.guild_member)\r\n\r\n            //getGuildMemberOcid(response.data.guild_member)\r\n            fukcingAPI(response.data.guild_member)\r\n        }).catch(e=>{\r\n            //console.log('Error!')\r\n            //console.log(e)\r\n        })\r\n\r\n        // names.map(async (elm)=>{\r\n        //     let res1 = await axios.get(elm)\r\n        //     let res2 = await axios.get(res1)\r\n        // })\r\n\r\n    }\r\n\r\n    // const fuckingAPI = async (nameArr) => {\r\n    //     const result = []\r\n    //     const promise = nameArr.map(async (ele) => {\r\n    //         const res = await axios.get();\r\n    //         result.push(res)\r\n    //     })\r\n    //     await Promise.all(promise);\r\n\r\n    //     return result;\r\n    // }\r\n\r\n    const fukcingAPI = async (nameArr) =>{\r\n        let date = dayjs()\r\n        const formatDate = date.subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n        for(let elm of nameArr){\r\n            let flag = false\r\n            let unionCharName\r\n            let memberOcid = { data: { ocid:\"Invalid\" }}\r\n            memberOcid = await axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+elm, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).catch(e=>{\r\n                flag = true\r\n            })\r\n            if(memberOcid === undefined) memberOcid = { data: { ocid:\"Invalid\" }}\r\n            const memberBasicInfo = await axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+memberOcid.data.ocid+`&date=`+formatDate, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).catch(e=>{\r\n                flag = true\r\n            })\r\n            const memberUnionInfo = await axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`ranking/union?ocid=`+memberOcid.data.ocid+`&date=`+formatDate, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).catch(e=>{\r\n                flag = true\r\n            })\r\n            if(!flag){\r\n                memberUnionInfo.data.ranking.map(async (data)=>{\r\n                    if(data.world_name === selectWorld) unionCharName = data.character_name\r\n                })\r\n            }\r\n            let unionOcid = { data: { ocid:\"Invalid\" }}\r\n            unionOcid = await axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+unionCharName, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).catch(e=>{\r\n                flag = true\r\n            })\r\n            if(unionOcid === undefined) unionOcid = { data: { ocid:\"Invalid\" }}\r\n            const unionBasicInfo = await axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+unionOcid.data.ocid+`&date=`+formatDate, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).catch(e=>{\r\n                flag = true\r\n            })\r\n            \r\n            if(!flag) {\r\n                await setTimeout(() => {\r\n                    //console.log(unionBasicInfo)\r\n                }, 500); \r\n                await insertData(memberBasicInfo.data, unionBasicInfo.data)\r\n            }\r\n\r\n        }\r\n        \r\n        // nameArr.map(async (elm, idx)=>{\r\n        //     let flag = false\r\n        //     let unionCharName\r\n        //     let memberOcid = { data: { ocid:\"Invalid\" }}\r\n        //     memberOcid = await axios.get(\r\n        //         `${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+elm, \r\n        //         {headers: {\r\n        //             \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        //     }}).catch(e=>{\r\n        //         flag = true\r\n        //     })\r\n        //     //if(!flag) memberOcid.data.ocid = \"Invalid\"\r\n        //     const memberBasicInfo = await axios.get(\r\n        //         `${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+memberOcid.data.ocid+`&date=`+formatDate, \r\n        //         {headers: {\r\n        //             \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        //     }}).catch(e=>{\r\n        //         flag = true\r\n        //     })\r\n        //     const memberUnionInfo = await axios.get(\r\n        //         `${process.env.GATSBY_NEXON_API_BASE_URL}`+`ranking/union?ocid=`+memberOcid.data.ocid+`&date=`+formatDate, \r\n        //         {headers: {\r\n        //             \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        //     }}).catch(e=>{\r\n        //         flag = true\r\n        //     })\r\n        //     if(!flag){\r\n        //         memberUnionInfo.data.ranking.map(async (data)=>{\r\n        //             if(data.world_name === selectWorld) unionCharName = data.character_name\r\n        //         })\r\n        //     }\r\n        //     const unionOcid = await axios.get(\r\n        //         `${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+unionCharName, \r\n        //         {headers: {\r\n        //             \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        //     }}).catch(e=>{\r\n        //         flag = true\r\n        //     })\r\n        //     const unionBasicInfo = await axios.get(\r\n        //         `${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+unionOcid.data.ocid+`&date=`+formatDate, \r\n        //         {headers: {\r\n        //             \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n        //     }}).catch(e=>{\r\n        //         flag = true\r\n        //     })\r\n\r\n        //     if(!flag) console.log(unionBasicInfo)\r\n            \r\n        // })\r\n    }\r\n\r\n    const insertData = async (basicInfo, originInfo) => {\r\n        setGuildMemberBasicInfo(guildMemberBasicInfo=>[...guildMemberBasicInfo, basicInfo])\r\n        setGuildMemberOriginInfo(guildMemberOriginInfo=>[...guildMemberOriginInfo, originInfo])\r\n    }\r\n\r\n    const testGetOcid = (testMember) => {\r\n        testMember.forEach(e=>{\r\n            let tmp = { name: e }\r\n            //console.log(\"testGetOcid\"+e)\r\n            axios.get(`${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+e, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY\r\n            }}).then(response=>{\r\n                tmp.ocid = response.data.ocid\r\n                setTestObj(testObj => [...testObj, tmp])\r\n            }).catch(e=>{\r\n                //console.log('Error!')\r\n                //console.log(e)\r\n            })\r\n        })\r\n    }\r\n\r\n    const getGuildMemberOcid = (guildMemberName) => {\r\n        Promise.allSettled(\r\n            guildMemberName.map((elm)=>\r\n                axios.get(`${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+elm, \r\n                    {headers: {\r\n                        \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY}}\r\n                )\r\n        )\r\n        ).then((res)=>{\r\n            let foo = []\r\n            res.forEach((result, idx)=>{\r\n                let tmp = { index : idx }\r\n                if(result.status === 'fulfilled'){ // Success\r\n                    const url = new URL(result.value.config.url)\r\n                    tmp.character_name = url.searchParams.get('character_name')\r\n                    tmp.ocid = result.value.data.ocid\r\n                }else{ // Failed\r\n                    const url = new URL(result.reason.config.url)\r\n                    tmp.character_name = url.searchParams.get('character_name')\r\n                    tmp.ocid = \"Invalid\"\r\n                }\r\n                foo.push(tmp)\r\n            })\r\n            setGuildMemberOcid(foo)\r\n            getGuildMemberBasicInfo(foo)\r\n            getGuildMemberUnionInfo(foo)\r\n        })\r\n    }\r\n\r\n    const getGuildMemberBasicInfo = (guildMemberOcid) => {\r\n        let date = dayjs()\r\n        const formatDate = date.subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n\r\n        Promise.allSettled(\r\n            guildMemberOcid.map((elm)=>\r\n                axios.get(`${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+elm.ocid+`&date=`+formatDate, \r\n                    {headers: {\r\n                        \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY}}\r\n                )\r\n        )).then((res)=>{\r\n            const memberArr = res.map((elm, idx)=>{\r\n                let tmp = {}\r\n                if(elm.status === 'fulfilled'){ // Success\r\n                    tmp = elm.value.data\r\n                }else{ // Failed\r\n                    tmp.character_name = guildMemberOcid[idx].character_name + \" (기록 없음)\"\r\n                    tmp.world_name = selectWorld\r\n                    tmp.character_class = \"(기록 없음)\"\r\n                    tmp.character_guild_name = searchGuild\r\n                    tmp.character_image = \"./src/iamges/(기록 없음).png\"\r\n                }\r\n\r\n                return tmp\r\n            })\r\n            setGuildMemberBasicInfo(memberArr)\r\n        })\r\n    }\r\n\r\n    const getGuildMemberUnionInfo = (guildMemberOcid) => {\r\n        let date = dayjs()\r\n        const formatDate = date.subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n\r\n        Promise.allSettled(\r\n            guildMemberOcid.map((elm)=>axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`ranking/union?ocid=`+elm.ocid+`&date=`+formatDate+`&world_name`+selectWorld, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY}}\r\n            ))\r\n        ).then((res)=>{\r\n            const originChar = res.map((elm, idx)=>{\r\n                let tmp = {}\r\n                if(elm.status === 'fulfilled'){ // Success\r\n                    elm.value.data.ranking.map((data)=>{\r\n                        if(data.world_name === selectWorld) tmp.character_name = data.character_name\r\n                    })\r\n                }else{ // Failed\r\n                    tmp.character_name = \"(기록 없음)\"\r\n                }\r\n                return tmp\r\n            })\r\n            //console.log(originChar)\r\n            getGuildMemberOriginOcid(originChar)\r\n        })\r\n    }\r\n\r\n    const getGuildMemberOriginOcid = (guildMemberOriginName) => {\r\n        Promise.allSettled(\r\n            guildMemberOriginName.map((elm)=>axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`id?character_name=`+elm.character_name, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY}}\r\n            ))\r\n        ).then((res)=>{\r\n            res.map((elm, idx)=>{\r\n                if(elm.status === 'fulfilled'){ // Success\r\n                    guildMemberOriginName[idx].ocid = elm.value.data.ocid\r\n                }else{ // Failed\r\n                    guildMemberOriginName[idx].ocid = \"Invalid\"\r\n                }\r\n            })\r\n            // guildMemberOriginName = { character_name, ocid }\r\n            //console.log(guildMemberOriginName)\r\n            getGuildMemberOriginInfo(guildMemberOriginName)\r\n        })\r\n    }\r\n\r\n    const getGuildMemberOriginInfo = (guildMemberOriginOcid) => {\r\n        let date = dayjs()\r\n        const formatDate = date.subtract(1, 'day').format(\"YYYY-MM-DD\")\r\n        Promise.allSettled(\r\n            guildMemberOriginOcid.map((elm)=>axios.get(\r\n                `${process.env.GATSBY_NEXON_API_BASE_URL}`+`character/basic?ocid=`+elm.ocid+`&date=`+formatDate, \r\n                {headers: {\r\n                    \"x-nxopen-api-key\":process.env.GATSBY_NEXON_API_KEY}}\r\n            ))\r\n        ).then((res)=>{\r\n            const memberArr = res.map((elm, idx)=>{\r\n                let tmp = {}\r\n                if(elm.status === 'fulfilled'){ // Success\r\n                    tmp = elm.value.data\r\n                }else{ // Failed\r\n                    tmp.character_name = \"(기록 없음)\"\r\n                    tmp.world_name = selectWorld\r\n                    tmp.character_class = \"(기록 없음)\"\r\n                    tmp.character_guild_name = searchGuild\r\n                    tmp.character_image = \"../images/(기록 없음).png\"\r\n                }\r\n\r\n                return tmp\r\n            })\r\n            setGuildMemberOriginInfo(memberArr)\r\n            setVisible(true)\r\n        })\r\n    }\r\n\r\n    // React.useEffect(()=>{\r\n    //     if(guildMemberBasicInfo){\r\n    //         console.log(guildMemberBasicInfo)\r\n    //     }\r\n    // },[guildMemberBasicInfo])\r\n\r\n    const onClickSearch = () => {\r\n        setVisible(true)\r\n        setGuildMemberOcid([])\r\n        setGuildMemberBasicInfo([])\r\n        setGuildMemberOriginInfo([])\r\n        //console.log(\"BtnInput : \"+selectWorld +\", \"+inputText)\r\n        setSearchGuild(inputText)\r\n        getOguildId(inputText, selectWorld)\r\n    \r\n        setInputText(\"\")\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <SearchWindow \r\n                placeholder={\"길드\"} \r\n                onChange={onChange} \r\n                value={inputText}\r\n                onClick={onClickSearch}\r\n                selectVisible={true}\r\n                selectList={worldList}\r\n                selectWorld={selectWorld}\r\n                setSelectWorld={setSelectWorld}\r\n            />\r\n            {visible&&\r\n                <div>\r\n                    <div  className={styles.output}>\r\n                        길드 {`[`}{searchGuild}{`]`}의 조회 결과입니다.<br/>\r\n                        접속 기록이 존재하지 않는 캐릭터는 검색되지 않습니다.<br/><br/>\r\n                    </div>\r\n                    {guildMemberBasicInfo? \r\n                        guildMemberBasicInfo.map((elm, idx)=>(\r\n                            <CharacterSlotGuildResult key={elm} characterInfoGuild={elm} characterInfoOrigin={guildMemberOriginInfo[idx]}/>\r\n                        )): \r\n                        '로딩 중'}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGuild\r\n","// extracted by mini-css-extract-plugin\nexport var input = \"search_guild-module--input--a9a69\";\nexport var output = \"search_guild-module--output--547f6\";","import * as React from \"react\"\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SerachGuild from \"../components/search_guild\"\r\nimport Seo from \"../components/seo\"\r\nimport * as styles from \"../components/index.module.css\"\r\n\r\nimport axios from 'axios'\r\n\r\nconst IndexPage = () => {\r\n  return(  \r\n  <Layout>\r\n    <SerachGuild></SerachGuild>\r\n  </Layout>\r\n  )\r\n}\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage\r\n"],"names":["ITERATOR","wellKnownSymbol","SAFE_CLOSING","called","iteratorWithReturn","next","done","this","Array","from","error","module","exports","exec","SKIP_CLOSING","ITERATION_SUPPORT","object","IS_DENO","IS_NODE","window","document","Deno","version","global","classof","process","uncurryThis","aCallable","NATIVE_BIND","bind","fn","that","undefined","apply","arguments","classofRaw","getMethod","isNullOrUndefined","Iterators","it","call","anObject","tryToString","getIteratorMethod","$TypeError","TypeError","argument","usingIterator","iteratorMethod","length","ArrayPrototype","prototype","isArrayIteratorMethod","lengthOfArrayLike","isPrototypeOf","getIterator","iteratorClose","Result","stopped","result","ResultPrototype","iterable","unboundFunction","options","iterator","iterFn","index","step","AS_ENTRIES","IS_RECORD","IS_ITERATOR","INTERRUPTED","stop","condition","callFn","value","kind","innerResult","innerError","NativePromiseConstructor","isCallable","isForced","inspectSource","IS_BROWSER","IS_PURE","V8_VERSION","NativePromisePrototype","SPECIES","SUBCLASSING","NATIVE_PROMISE_REJECTION_EVENT","PromiseRejectionEvent","FORCED_PROMISE_CONSTRUCTOR","PROMISE_CONSTRUCTOR_SOURCE","GLOBAL_CORE_JS_PROMISE","String","test","promise","resolve","FakePromise","constructor","then","CONSTRUCTOR","REJECTION_EVENT","checkCorrectnessOfIteration","all","$","newPromiseCapabilityModule","perform","iterate","target","stat","forced","allSettled","C","capability","f","reject","promiseResolve","values","counter","remaining","alreadyCalled","status","reason","characterInfoGuild","characterInfoOrigin","Table","borderless","rowSpan","characterInfo","character_guild_name","className","inputText","setInputText","React","searchGuild","setSearchGuild","visible","setVisible","worldList","selectWorld","setSelectWorld","oguildId","setOguildId","guildMemberName","setGuildMemberName","guildMemberOcid","setGuildMemberOcid","guildMemberBasicInfo","setGuildMemberBasicInfo","guildMemberOriginInfo","setGuildMemberOriginInfo","testGuildMember","setTestGuildMember","testObj","setTestObj","getGuildBasicInfo","formatDate","dayjs","subtract","format","axios","headers","response","fukcingAPI","data","guild_member","catch","e","async","elm","nameArr","unionCharName","flag","memberOcid","ocid","memberBasicInfo","memberUnionInfo","ranking","map","world_name","character_name","unionOcid","unionBasicInfo","setTimeout","insertData","basicInfo","originInfo","placeholder","onChange","onClick","guildName","oguild_id","selectVisible","selectList","idx","key","Head","title"],"sourceRoot":""}